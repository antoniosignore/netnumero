<?xml version="1.0" encoding="utf-8" ?>
<project name="iNumero" default="build" basedir=".">
    <!-- Configure path to GWT SDK -->
    <property name="gwt.sdk" location="lib/gwt-2.4.0"/>

    <!-- Configure path to APPENGINE SDK -->
    <property name="appengine.sdk" location="lib/appengine-java-sdk-1.7.2.1"/>

    <!-- Configure path to JUNIT SDK -->
    <property name="junit.sdk" location="lib/junit4.5"/>

    <!-- Import section -->
    <import file="${appengine.sdk}/config/user/ant-macros.xml"/>

    <path id="project.class.path">
        <pathelement location="war/WEB-INF/classes"/>
        <pathelement location="${gwt.sdk}/gwt-user.jar"/>
        <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
        <!-- Add any additional non-server libs (such as JUnit) -->
        <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    </path>

    <path id="tools.class.path">
        <path refid="project.class.path"/>
        <pathelement location="lib/junit4.5"/>
        <fileset dir="${appengine.sdk}/lib/tools">
            <include name="**/asm-*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/agent">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/impl">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/impl/agent">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/">
            <include name="appengine-tools-api.jar"/>
        </fileset>
    </path>


    <path id="test.class.path">
        <path refid="project.class.path"/>
        <path refid="tools.class.path"/>
        <pathelement location="${junit.sdk}"/>
        <fileset dir="${junit.sdk}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/testing">
            <include name="appengine-testing.jar"/>
        </fileset>

    </path>

    <target name="libs" description="Copy libs to WEB-INF/lib">
        <mkdir dir="war/WEB-INF/lib"/>
        <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar"/>
        <!-- Add any additional server libs that need to be copied -->
        <copy todir="war/WEB-INF/lib" flatten="true">
            <fileset dir="${appengine.sdk}/lib/user" includes="**/*.jar"/>
        </copy>
        <copy todir="war/WEB-INF/lib" flatten="true">
            <fileset dir="lib/project-lib" includes="**/*.jar"/>
        </copy>
    </target>

    <target name="javac" depends="clean,libs" description="Compile java source">
        <mkdir dir="war/WEB-INF/classes"/>
        <javac srcdir="src" includes="**" encoding="utf-8"
               destdir="war/WEB-INF/classes"
               source="1.5" target="1.5" nowarn="true"
               debug="true" debuglevel="lines,vars,source">
            <classpath refid="project.class.path"/>
        </javac>
        <copy todir="war/WEB-INF/classes">
            <fileset dir="src" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
            </classpath>
            <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
            <jvmarg value="-Xmx512M"/>
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg value="com.numhero.Application"/>

            <arg value="-gen"/>
            <arg value="gen"/>

            <arg value="-extra"/>
            <arg value="extra"/>
        </java>
    </target>

    <target name="devmode" depends="javac" description="Run development mode">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
                <path refid="tools.class.path"/>
            </classpath>
            <jvmarg value="-Xmx512M"/>
            <arg value="-startupUrl"/>
            <!--<arg value="Application.html"/>-->
            <arg value="company/mycompany"/>
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg value="-server"/>
            <arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher"/>
            <arg value="com.numhero.Application"/>
        </java>
    </target>

    <target name="debug" depends="javac" description="Run development mode">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
                <path refid="tools.class.path"/>
            </classpath>
            <jvmarg value="-Xmx512M"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8889"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=NONE"/>
            <arg value="-startupUrl"/>
            <arg value="company/mycompany"/>
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg value="-server"/>
            <arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher"/>
            <arg value="com.numhero.Application"/>
        </java>
    </target>

    <target name="runserver" depends="gwtc"
            description="Starts the development server.">
        <dev_appserver war="war"/>
    </target>

    <target name="javac.tests" depends="javac" description="Compiles test code">
        <javac srcdir="test" includes="**" encoding="utf-8"
               source="1.5" target="1.5" nowarn="true"
               debug="true" debuglevel="lines,vars,source">
            <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
                <path refid="tools.class.path"/>
                <path refid="test.class.path"/>
            </classpath>
        </javac>
    </target>

    <target name="test.dev" depends="javac.tests" description="Run development mode tests">
        <mkdir dir="reports/htmlunit.dev"/>
        <junit fork="yes" printsummary="yes" haltonfailure="no">
            <jvmarg line="-Xmx256m"/>
            <sysproperty key="gwt.args" value="-logLevel WARN"/>
            <sysproperty key="java.awt.headless" value="true"/>
            <classpath>
                <pathelement location="src"/>
                <pathelement location="test"/>
                <path refid="test.class.path"/>
                <pathelement location="${junit.sdk}"/>
            </classpath>
            <batchtest todir="reports/htmlunit.dev">
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="plain"/>
            <formatter type="xml"/>
        </junit>
    </target>

    <target name="test.prod" depends="javac.tests" description="Run production mode tests">
        <mkdir dir="reports/htmlunit.prod"/>
        <junit fork="yes" printsummary="yes" haltonfailure="no">
            <jvmarg line="-Xmx256m"/>
            <sysproperty key="gwt.args" value="-prod -logLevel WARN -out www-test"/>
            <sysproperty key="java.awt.headless" value="true"/>
            <classpath>
                <pathelement location="src"/>
                <pathelement location="test"/>
                <path refid="project.class.path"/>
                <pathelement location="${junit.sdk}"/>
            </classpath>
            <batchtest todir="reports/htmlunit.prod">
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="plain"/>
            <formatter type="xml"/>
        </junit>
    </target>

    <target name="test" description="Run development and production mode tests">
        <antcall target="test.dev"/>
        <antcall target="test.prod"/>
    </target>

    <target name="hosted" depends="devmode"
            description="Run development mode (NOTE: the 'hosted' target is deprecated)"/>

    <target name="build" depends="gwtc" description="Build this project"/>

    <target name="war" depends="build" description="Create a war file">
        <zip destfile="netnumero.war" basedir="war"/>
    </target>

    <target name="clean" description="Cleans this project">
        <delete dir="war/WEB-INF/classes/com" failonerror="false"/>
        <delete dir="war/application" failonerror="false"/>
        <delete dir="war/WEB-INF/lib" failonerror="false"/>
        <delete dir="out/artifacts" failonerror="false"/>
    </target>
</project>
